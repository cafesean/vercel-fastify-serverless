import Redis, { RedisOptions } from 'ioredis';
import fp from 'fastify-plugin';

export default fp<RedisOptions>(async (fastify, opts) => {
  if (fastify.redis) {
    throw new Error('fastify-redis-client has been defined before');
  }

  const redis = new Redis({
    host: fastify.config.redis.host,
    port: fastify.config.redis.port,
    password: fastify.config.redis.password,
    keyPrefix: `${fastify.config.env}_`,
  });

  fastify
    .decorate('redis', redis)
    .decorateRequest('redis', { getter: () => fastify.redis });
}, {
  fastify: '4.x',
  name: 'fastify-redis-client',
  dependencies: [
    'crowdserve-config',
  ]
});

declare module 'fastify' {
  interface FastifyRequest {
    redis: Redis;
  }
  interface FastifyInstance {
    redis: Redis;
  }
}
import fp from 'fastify-plugin';

import fastifySwagger from '@fastify/swagger';
import fastifySwaggerUi from '@fastify/swagger-ui';

import { URL } from 'url';

// Swagger definition
// https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md
const swaggerDefinition = {
  info: {
    title: 'CrowdServe',
    version: '0.0.1',
    description: 'CrowdServe API documation',
  },
  host: '127.0.0.1:3000',
  schemes: [ 'http' ],
  consumes: [ 'application/json' ],
  produces: [ 'application/json' ]
};

export default fp(async (fastify) => {

  if (fastify.config.baseUrl) {
    const parsedUrl = new URL(fastify.config.baseUrl);
    swaggerDefinition.host = parsedUrl.host;
    swaggerDefinition.schemes = [ parsedUrl.protocol.startsWith('https') ? 'https' : 'http' ];
  }

  if (fastify.config.debug) {
    await fastify.register(fastifySwagger, {
      mode: 'dynamic',
      swagger: swaggerDefinition,
      hideUntagged: false
    });

    await fastify.register(fastifySwaggerUi, {
      routePrefix: '/docs',
      uiConfig: {
        docExpansion: 'full',
        deepLinking: false,
      },
      uiHooks: {
        onRequest (request, reply, next) {
          next();
        },
        preHandler (request, reply, next) {
          next();
        },
      },
      staticCSP: true,
      transformStaticCSP: (header) => header,
    });
  }

  fastify.addSchema({
    $id: 'Headers',
    type: 'object',
    required: [
      'x-app-platform',
      'x-app-version'
    ],
    properties: {
      'x-app-platform': {
        type: 'string',
        enum: ['android', 'ios']
      },
      'x-app-version': {
        type: 'string'
      }
    }
  });

  fastify.addSchema({
    $id: 'HeadersWithAuth',
    type: 'object',
    required: [
      'x-app-platform',
      'x-app-version',
      'authorization'
    ],
    properties: {
      'x-app-platform': {
        type: 'string',
        enum: ['android', 'ios']
      },
      'x-app-version': {
        type: 'string'
      },
      'authorization': {
        type: 'string'
      }
    }
  });

  fastify.addSchema({
    $id: 'TicketStatus',
    type: 'number',
    enum: [ 0, 1, 2, 3 ]
  });
}, {
  fastify: '4.x',
  name: 'crowdserve-swagger',
  dependencies: [
    'crowdserve-config',
  ]
});